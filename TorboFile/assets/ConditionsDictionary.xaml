<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:types="clr-namespace:Lemur.Types"
    xmlns:controls="clr-namespace:Lemur.Windows.Controls"
    xmlns:rules="clr-namespace:Lemur.Windows.Validation"
    xmlns:convert="clr-namespace:Lemur.Windows.Converters"
	xmlns:g="clr-namespace:System.Collections.Generic;assembly=mscorlib"
	xmlns:r="clr-namespace:TorboFile.Properties"
	xmlns:models="clr-namespace:Lemur.Operations.FileMatching.Models"
	xmlns:mvvm="clr-namespace:Lemur.Windows.MVVM"
    xmlns:local="clr-namespace:Lemur.Operations.FileMatching"
	xmlns:system="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="CommonDictionary.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	<!-- DEFAULT/SAMPLE RESOURCES FOR WORKING WITH FILE MATCHING CONDITIONS -->

	<DataTemplate x:Key="baseConditionTemplate" DataType="{x:Type local:BaseCondition}">

		<StackPanel Orientation="Horizontal">
			<CheckBox x:Name="chkExclude" Content="Exclusion Condition" IsChecked="{Binding Exclude, Mode=TwoWay}"
                  ToolTip="If checked, only items that do NOT match this requirement will be included in results."/>
			<TextBlock x:Name="fldExclude" Text="Items matching this condition will be included in the search."/>
		</StackPanel>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Exclude}" Value="true">
				<Setter TargetName="fldExclude" Property="Text"
						Value="Items matching this condition will be excluded from the search." />
			</DataTrigger>
		</DataTemplate.Triggers>

	</DataTemplate>

	<DataTemplate x:Key="emptyDirTemplate" DataType="models:FileTestVM">

		<StackPanel>

		<!--<mvvm:StringSetter x:Name="TestName" Binding="{Binding IncludeText, Mode=OneWayToSource}" Value="EMPTY DIRECTORIES INCLUDED IN SEARCH" />
			<mvvm:StringSetter x:Name="AnotherTest" Binding="{Binding ExcludeText, Mode=OneWayToSource}" Value="EMPTY DIRECTORIES EXCLUDED FROM SEARCH" />
-->
			
			<TextBlock x:Name="fldText"
				   Text="{x:Static r:CustomSearchStrings.match_empty_dir_include}" />


		</StackPanel>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=Exclude}" Value="true">
				<Setter TargetName="fldText" Property="Text"
						Value="{x:Static r:CustomSearchStrings.match_empty_dir_exclude}">
				</Setter>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="extensionTestTemplate" DataType="{x:Type models:FileTestVM}">
		<StackPanel>
			<TextBlock Style="{StaticResource infoText}" Text="{x:Static CustomSearchStrings.match_ext_prompt}" ToolTip="{x:Static CustomSearchStrings.match_ext_tip}" />
			<TextBox x:Name="fldExtensionList" Style="{StaticResource SimpleTextInput}">
				<TextBox.Text>
					<Binding ValidatesOnExceptions="True" Path="Data.Extensions" Converter="{StaticResource stringSplitter}">
						<Binding.ValidationRules>
							<rules:StringContentsRule />
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="fileCountTemplate" DataType="models:FileTestVM">

		<StackPanel>

			<TextBlock Style="{StaticResource infoText}"
					   Text="{x:Static CustomSearchStrings.match_count_prompt}" />
			
			<CheckBox Name="chkIncludeDirs" Style="{StaticResource chkOption}" Content="{x:Static CustomSearchStrings.match_count_subdir_opt}" IsChecked="{Binding Data.CountSubDirs}"/>

			<StackPanel Orientation="Horizontal">

				<TextBlock Style="{StaticResource infoText}" Text="{x:Static CustomSearchStrings.match_count_min_prompt}"/>

				<TextBox Name="fldMinCount" Style="{StaticResource intInput}"
						 ToolTip="{x:Static CustomSearchStrings.match_count_min_tip}">
					<TextBox.Text>
						<Binding ValidatesOnExceptions="True" Path="Data.MinFiles">
							<Binding.ValidationRules>
								<rules:IntValidationRule />
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
			</StackPanel>

			<StackPanel Orientation="Horizontal">

				<TextBlock Style="{StaticResource infoText}" Text={x:Static CustomSearchStrings.match_count_max_prompt}" />
				<TextBox Name="fldMaxCount" Style="{StaticResource intInput}" ToolTip="{x:Static CustomSearchStrings.match_count_max_tip}">
				<TextBox.Text>
					<Binding ValidatesOnExceptions="True" Path="Data.MaxFiles">
						<Binding.ValidationRules>
							<rules:IntValidationRule />
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
			</StackPanel>

		</StackPanel>

	</DataTemplate>

	<DataTemplate x:Key="isFileTemplate" DataType="{x:Type models:FileTestVM}">

		<TextBlock Name="fldInfo" Text="{x:Static CustomSearchString.is_file_include}"/>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Exclude}" Value="true">
				<Setter TargetName="fldInfo" Property="Text" Value="{x:Static CustomSearchString.is_file_exclude}"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="isDirectoryTemplate" DataType="models:FileTestVM">

		<StackPanel Orientation="Horizontal">
			<TextBlock Name="lblInfo" Text="{x:Static CustomSearchStrings.is_file_exclude}"/>
		</StackPanel>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Exclude}" Value="true">
				<Setter TargetName="lblInfo" Property="Text" Value="{x:Static CustomSearchStrings.is_file_include}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	
	<DataTemplate x:Key="nameContainsTemplate" DataType="{x:Type models:FileTestVM}">

		<StackPanel>

			<CheckBox Name="chkFullPath" Content="Search Full Path" IsChecked="{Binding Data.FullPath}"
						  ToolTip="If checked, the entire file path is searched for the match string."/>
			<StackPanel Orientation="Horizontal">

				<TextBlock Style="{StaticResource infoText}" Text="File/Dictory Name contains: "/>
				<TextBox Style="{StaticResource SimpleTextInput}" Text="{Binding Path=Data.MatchString}" />
				
			</StackPanel>

		</StackPanel>

	</DataTemplate>

	<DataTemplate x:Key="regexTestTemplate" DataType="{x:Type models:FileTestVM}">

		<StackPanel>

			<StackPanel Orientation="Horizontal">
				<TextBlock Text="Test Mode: " Style="{StaticResource infoText}" />
				<ComboBox Name="comboTestMode" ItemsSource="{mvvm:EnumSource EnumType={x:Type local:FileNameSearchMode} }"
					  SelectedItem="{Binding Data.Mode}"/>
			</StackPanel>

			<StackPanel Orientation="Vertical">

			<TextBlock Style="{StaticResource infoText}" Text="Test Expression: "/>
			<TextBox Style="{StaticResource SimpleTextInput}" Text="{Binding Path=Data.TestExpression}" MinWidth="240"/>
		</StackPanel>

		</StackPanel>
		
	</DataTemplate>

	<DataTemplate x:Key="sizeMatchTemplate" DataType="{x:Type models:FileTestVM}">

		<StackPanel>

			<StackPanel x:Name="ContentSizeRange" Orientation="Horizontal" Margin="16,4,0,8">
                <StackPanel x:Name="MinSizePanel">
					<TextBlock x:Name="LblMinSize" Style="{StaticResource infoText}" Text="Min Size (bytes): "/>
					<TextBox Style="{StaticResource SimpleTextInput}" Width="120" Validation.ErrorTemplate="{StaticResource ErrorTemplate}">
						<TextBox.Text>
							<Binding ValidatesOnExceptions="true" Converter="{StaticResource SizeToString}" Path="Data.MinSize">
								<Binding.ValidationRules>
									<rules:DataSizeRule />
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>

					</TextBox>

				</StackPanel>
                <StackPanel Margin="32,0,0,0">
                    <TextBlock x:Name="LblMaxSize" Style="{StaticResource infoText}" Text="Max Size (bytes): "/>
					<TextBox Style="{StaticResource SimpleTextInput}" Width="120" MaxLines="1"
                 Validation.ErrorTemplate="{StaticResource ErrorTemplate}">
						<TextBox.Text>
							<Binding ValidatesOnExceptions="true" Converter="{StaticResource SizeToString}" Path="Data.MaxSize">
								<Binding.ValidationRules>
									<rules:DataSizeRule />
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>

					</TextBox>

				</StackPanel>

            </StackPanel>
   
        </StackPanel>
        
    </DataTemplate>

	
	<DataTemplate x:Key="fileTestTemplate" DataType="{x:Type models:FileTestVM}">

		<Border Style="{StaticResource listItemBorder}">
			
			<StackPanel Style="{StaticResource itemPanel}">
				
			<TextBlock x:Name="fldOpName" Style="{StaticResource BoldText}" Text="{Binding Path=DisplayName}" Visibility="{Binding Path=DisplayName, Converter={StaticResource NonNullToVisible}}"/>
			<TextBlock x:Name="fldDesc" Style="{StaticResource minorText}" Text="{Binding Path=Desc}" Visibility="{Binding Path=Desc, Converter={StaticResource NonNullToVisible}}"/>

			<CheckBox x:Name="chkExclude" Style="{StaticResource chkOption}" Content="{x:Static r:CustomSearchStrings.exclude_option}" IsChecked="{Binding Exclude}"
                  ToolTip="{x:Static r:CustomSearchStrings.exclude_tip}"/>
			<TextBlock x:Name="fldIncludeText" Text="{Binding Path=IncludeText}"/>

				<ContentPresenter Content="{Binding}">
					<ContentPresenter.ContentTemplateSelector>
						<mvvm:TypeTemplateSelector TestProperty="Data">

							<mvvm:TypeTemplateSelector.Templates>

								<mvvm:TemplateDictionary>

									<system:String x:Key="{x:Type local:SizeCondition}">sizeMatchTemplate</system:String>
									<system:String x:Key="{x:Type local:IsFile}">isFileTemplate</system:String>
									<system:String x:Key="{x:Type local:FileCount}">fileCountTemplate</system:String>
									<system:String x:Key="{x:Type local:ExtensionCondition}">extensionTestTemplate</system:String>
									<system:String x:Key="{x:Type local:IsDirectory}">isDirectoryTemplate</system:String>
									<system:String x:Key="{x:Type local:NameContains}">nameContainsTemplate</system:String>
									<system:String x:Key="{x:Type local:RegexTest}">regexTestTemplate</system:String>
									<system:String x:Key="{x:Type local:EmptyCondition}">emptyDirTemplate</system:String>
									
								</mvvm:TemplateDictionary>
							</mvvm:TypeTemplateSelector.Templates>
						</mvvm:TypeTemplateSelector>
					</ContentPresenter.ContentTemplateSelector>
				</ContentPresenter>

			</StackPanel>


		</Border>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Exclude}" Value="true">
				<Setter TargetName="fldIncludeText" Property="Text" Value="{Binding Path=ExcludeText}" />
			</DataTrigger>
		</DataTemplate.Triggers>

	</DataTemplate>

</ResourceDictionary>