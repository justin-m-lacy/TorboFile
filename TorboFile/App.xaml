<Application x:Class= "TorboFile.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:TorboFile"
             xmlns:categories="clr-namespace:TorboFile.Categories"
             xmlns:lerptext="clr-namespace:Lemur.Windows.Text"
             xmlns:convert="clr-namespace:Lemur.Windows.Converters"
             xmlns:controls="clr-namespace:TorboFile.View.Controls"
             xmlns:models="clr-namespace:TorboFile.ViewModels"
             DispatcherUnhandledException="Application_DispatcherUnhandledException" Startup="Application_Startup" Exit="Application_Exit">

    <Application.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="assets/MainDictionary.xaml"/>
			</ResourceDictionary.MergedDictionaries>

        <!-- DATA TEMPLATES -->

        <!-- FILE PREVIEW TEMPLATES -->
        <DataTemplate x:Key="ViewImageTemplate" DataType="{x:Type models:FilePreviewModel}">
            <controls:ViewImageControl Source="{Binding FilePath, Mode=OneWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewFailed">
                        <i:InvokeCommandAction Command="{Binding CmdPreviewFailed}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </controls:ViewImageControl>
        </DataTemplate>

        <DataTemplate x:Key="ViewMediaTemplate" DataType="{x:Type models:FilePreviewModel}">
            <controls:MediaKitPreview>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewFailed">
                        <i:InvokeCommandAction Command="{Binding CmdPreviewFailed}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </controls:MediaKitPreview>
        </DataTemplate>

        <!--<DataTemplate x:Key="ViewPdfTemplate" DataType="{x:Type models:FilePreviewModel}">
            <controls:PdfPreview />
        </DataTemplate>-->
        
        <DataTemplate x:Key="ViewTextTemplate" DataType="{x:Type models:FilePreviewModel}">
            <controls:ViewTextControl/>
        </DataTemplate>
        <DataTemplate x:Key="ViewUnknownTemplate" DataType="{x:Type models:FilePreviewModel}">
            <controls:ViewUnknownControl HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
        </DataTemplate>

        <Style x:Key="PreviewSelector" TargetType="{x:Type ContentControl}">
            <Setter Property="Content" Value="{Binding}"/>
            <Setter Property="ContentTemplate" Value="{StaticResource ViewUnknownTemplate}" />
            <Style.Triggers>

                <!--<DataTrigger Binding="{Binding MimeStem}" Value="pdf" >
                    <Setter Property="ContentTemplate" Value="{StaticResource ViewPdfTemplate}" />
                </DataTrigger>-->
                <DataTrigger Binding="{Binding MimeRoot}" Value="image">
                    <Setter Property="ContentTemplate" Value="{StaticResource ViewImageTemplate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding MimeRoot}" Value="audio">
                    <Setter Property="ContentTemplate" Value="{StaticResource ViewMediaTemplate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding MimeRoot}" Value="video">
                    <Setter Property="ContentTemplate" Value="{StaticResource ViewMediaTemplate}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding MimeRoot}" Value="text">
                    <Setter Property="ContentTemplate" Value="{StaticResource ViewTextTemplate}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- MessageString Coloring Using Style -->
        <DataTemplate x:Key="MessageString" DataType="{x:Type lerptext:TextString}">
            <TextBlock Text="{Binding Text}" FontSize="10" HorizontalAlignment="Left">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="success">
                                <Setter Property="Foreground" Value="{StaticResource SuccessBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>

		</ResourceDictionary>
	</Application.Resources>
    
</Application>
