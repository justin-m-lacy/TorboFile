<UserControl x:Class="TorboFile.View.Controls.FileMatchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:TorboFile.View.Controls"
             xmlns:mvvm="clr-namespace:Lemur.Windows.MVVM"
             xmlns:match="clr-namespace:Lemur.Operations.FileMatching"
             xmlns:model="clr-namespace:Lemur.Operations.FileMatching.Models"
             mc:Ignorable="d" 
             d:DesignHeight="300" Width="976">

    <!-- View for Creating FileMatchOperations -->
	<!-- CURRENTLY UNUSED -->

    <UserControl.Resources>

        <!-- Template appears before a Condition has been selected. -->
        <DataTemplate x:Key="nullTestTemplate" DataType="{x:Type model:FileTestVM}">

        </DataTemplate>

        <!-- Template appears before a Condition has been selected. -->
        <DataTemplate x:Key="sizeTestTemplate" DataType="{x:Type model:FileTestVM}">

            <StackPanel>
                
            </StackPanel>

        </DataTemplate>

        <Style x:Key="fileTestSelector" TargetType="{x:Type ContentPresenter}">
            <Setter Property="Content" Value="{Binding}"/>
            <Setter Property="ContentTemplate" Value="{StaticResource nullTestTemplate}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding TestType}" Value="{x:Type match:SizeCondition}">
                    <Setter Property="ContentTemplate" Value="{StaticResource sizeTestTemplate}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
 
    </UserControl.Resources>
    
    <DockPanel LastChildFill="False">

        <CheckBox x:Name="ChkRecursiveSearch" DockPanel.Dock="Top"
                  IsChecked="{Binding Settings.Recursive}"
                  Content="Recursive File Search"/>
        
        <ComboBox DockPanel.Dock="Top" Text="Search Type" MaxWidth="100"
                  SelectedItem="{Binding Path=Settings.MatchType}"
                  ItemsSource="{mvvm:EnumSourceExtension EnumType={x:Type match:MatchType}}">
        </ComboBox>

        <ListBox DockPanel.Dock="Top" x:Name="ListConditions" ItemsSource="{Binding MatchConditions}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <ContentPresenter Content="{Binding}"/>
                        <Button x:Name="BtnRemoveCondition" Style="{StaticResource StdButton}" MaxHeight="32" MaxWidth="72"
                HorizontalContentAlignment="Center" Background="DarkGray"
                Command="{Binding Source={x:Reference Name=ListConditions}, Path=DataContext.CmdRemoveCondition}" CommandParameter="{Binding}">
                    Remove
                </Button>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            
        </ListBox>
        <Button x:Name="BtnAddCondtion" Style="{StaticResource StdButton}" MaxHeight="32" MaxWidth="72"
                HorizontalContentAlignment="Center"
                Command="{Binding CmdAddCondition}"
                Background="DarkGray" DockPanel.Dock="Bottom">

            Add</Button>



    </DockPanel>
</UserControl>
